# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–æ–≥–æ –±–æ–π–ª–µ—Ä–ø–ª–µ–π—Ç–∞

Write-Host "üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ Hono Backend Boilerplate" -ForegroundColor Cyan
Write-Host "--------------------------------------------------------------" -ForegroundColor Cyan

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Bun
if (-not (Get-Command bun -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Bun –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Bun: https://bun.sh/" -ForegroundColor Red
    exit
}

# –ó–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏ –ø—Ä–æ–µ–∫—Ç–∞
$PROJECT_NAME = Read-Host -Prompt "üëâ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"
if ([string]::IsNullOrEmpty($PROJECT_NAME)) {
    Write-Host "‚ùå –ò–º—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º" -ForegroundColor Red
    exit
}

# –ó–∞–ø—Ä–æ—Å –ø–æ—Ä—Ç–∞ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
$APP_PORT = Read-Host -Prompt "üëâ –í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 3000)"
if ([string]::IsNullOrEmpty($APP_PORT)) {
    $APP_PORT = "3000"
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –¥–ª—è better-auth
$AUTH_SECRET = [Convert]::ToBase64String([System.Security.Cryptography.RandomNumberGenerator]::GetBytes(32))

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
@"
# –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
APP_NAME=${PROJECT_NAME}
APP_PORT=${APP_PORT}
NODE_ENV=development

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL="postgresql://postgres:postgres@localhost:5432/${PROJECT_NAME}_db?schema=public"

# Better Auth
BETTER_AUTH_SECRET="${AUTH_SECRET}"
BETTER_AUTH_URL="http://localhost:${APP_PORT}"
"@ | Out-File -FilePath ".env" -Encoding utf8

Write-Host "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω" -ForegroundColor Green

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ package.json
$packageJson = Get-Content -Path "package.json" -Raw
$packageJson = $packageJson -replace '"name": "hono-backend-boilerplate"', "`"name`": `"$PROJECT_NAME`""
$packageJson | Out-File -FilePath "package.json" -Encoding utf8
Write-Host "‚úÖ package.json –æ–±–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ docker-compose.yml
$dockerCompose = Get-Content -Path "docker-compose.yml" -Raw
$dockerCompose = $dockerCompose -replace "hono_db", "${PROJECT_NAME}_db"
$dockerCompose | Out-File -FilePath "docker-compose.yml" -Encoding utf8
Write-Host "‚úÖ docker-compose.yml –æ–±–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Yellow
bun install

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git
Write-Host "üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git..." -ForegroundColor Yellow
git init
bun prepare

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
Write-Host "üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Yellow
bun db:generate

Write-Host "‚ú® –ü—Ä–æ–µ–∫—Ç '${PROJECT_NAME}' —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!" -ForegroundColor Green
Write-Host ""
Write-Host "üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:" -ForegroundColor Cyan
Write-Host "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: docker compose up -d db" -ForegroundColor White
Write-Host "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: bun db:migrate" -ForegroundColor White
Write-Host "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: bun dev" -ForegroundColor White
Write-Host ""
Write-Host "üìù –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ README.md" -ForegroundColor Cyan 